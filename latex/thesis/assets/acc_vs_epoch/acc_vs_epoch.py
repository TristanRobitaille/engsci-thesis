import scienceplots
import matplotlib.pyplot as plt
import numpy as np

plt.style.use(['science', 'grid'])

acc_vs_epoch = {
    'k = 1':  [0.495, 0.5642, 0.6283, 0.654, 0.659, 0.62, 0.6886, 0.6574, 0.6362, 0.6914, 0.6412, 0.7506, 0.7539, 0.7573, 0.7489, 0.7673, 0.7617, 0.764, 0.74, 0.7779, 0.7762, 0.7667, 0.7773, 0.7561, 0.769, 0.779, 0.7617, 0.7785, 0.784, 0.7835, 0.7757, 0.7835, 0.7779, 0.7751, 0.7874, 0.784, 0.7684, 0.7891, 0.7673, 0.7846, 0.7773, 0.7879, 0.7785, 0.7907, 0.774, 0.7807, 0.7935, 0.7885, 0.7785, 0.7824, 0.7757, 0.7796, 0.7846, 0.7946, 0.7835, 0.7829, 0.7874, 0.7913, 0.7818, 0.7868, 0.7924, 0.7863, 0.7952, 0.7919, 0.7935, 0.7902, 0.7846, 0.7935, 0.7857, 0.7857, 0.7963, 0.7891, 0.7879, 0.7852, 0.8025, 0.7818, 0.7958, 0.793, 0.7985, 0.803, 0.7997, 0.7952, 0.7885, 0.7952, 0.7974, 0.7863, 0.798, 0.7913, 0.8008, 0.798, 0.8041, 0.798, 0.793, 0.793, 0.8041, 0.7974, 0.7891, 0.7885, 0.803, 0.8002],
    'k = 5': [0.6753, 0.6309, 0.6958, 0.6709, 0.687, 0.6758, 0.6777, 0.7036, 0.6943, 0.6943, 0.7217, 0.6973, 0.7144, 0.7168, 0.6895, 0.7002, 0.7407, 0.7402, 0.7393, 0.7163, 0.7397, 0.7319, 0.7417, 0.748, 0.7559, 0.7388, 0.7603, 0.7573, 0.7617, 0.7446, 0.7544, 0.7505, 0.7388, 0.7646, 0.7529, 0.7588, 0.7471, 0.7515, 0.7412, 0.7832, 0.7769, 0.79, 0.7373, 0.7783, 0.7778, 0.7617, 0.7842, 0.7637, 0.7666, 0.7949, 0.7812, 0.7915, 0.7812, 0.8013, 0.7793, 0.7827, 0.7744, 0.7827, 0.7817, 0.8062, 0.7891, 0.7803, 0.7812, 0.7959, 0.7827, 0.7856, 0.7944, 0.77, 0.7905, 0.7954, 0.8008, 0.8105, 0.7886, 0.814, 0.8052, 0.8071, 0.7954, 0.8027, 0.8027, 0.8135, 0.7959, 0.8013, 0.7944, 0.7939, 0.8022, 0.8042, 0.7861, 0.791, 0.8003, 0.7988, 0.7988, 0.8081, 0.7993, 0.8174, 0.8218, 0.8115, 0.8018, 0.8149, 0.8091, 0.8096],
    'k = 7':  [0.6492, 0.6733, 0.6607, 0.6928, 0.7222, 0.73, 0.7269, 0.6864, 0.7143, 0.7138, 0.6886, 0.719, 0.6964, 0.7264, 0.7211, 0.7227, 0.7458, 0.7206, 0.7327, 0.7584, 0.7495, 0.7321, 0.7395, 0.7768, 0.7689, 0.7663, 0.7799, 0.761, 0.7815, 0.7831, 0.7747, 0.781, 0.782, 0.7752, 0.7826, 0.7668, 0.7862, 0.7726, 0.771, 0.7941, 0.7763, 0.791, 0.7857, 0.7878, 0.7705, 0.7957, 0.7899, 0.7836, 0.7899, 0.8057, 0.7931, 0.7852, 0.8009, 0.7967, 0.7857, 0.7815, 0.803, 0.7999, 0.803, 0.8051, 0.8072, 0.8041, 0.7799, 0.7962, 0.8004, 0.7994, 0.8041, 0.7931, 0.7999, 0.7873, 0.8136, 0.8183, 0.8256, 0.8162, 0.8046, 0.8025, 0.8188, 0.813, 0.8178, 0.8083, 0.8125, 0.8136, 0.8015, 0.8088, 0.8167, 0.8162, 0.812, 0.8072, 0.8335, 0.812, 0.8167, 0.8051, 0.8162, 0.8178, 0.8309, 0.8157, 0.8304, 0.8062, 0.8157, 0.8277],
    'k = 16': [0.5561, 0.6086, 0.6992, 0.6949, 0.6727, 0.687, 0.6933, 0.6859, 0.7082, 0.696, 0.706, 0.6329, 0.732, 0.6896, 0.7219, 0.7235, 0.7034, 0.7452, 0.7283, 0.7304, 0.7357, 0.7293, 0.7357, 0.706, 0.7579, 0.7474, 0.7315, 0.7511, 0.7585, 0.7511, 0.7431, 0.7574, 0.7346, 0.7421, 0.724, 0.7484, 0.7484, 0.7526, 0.7489, 0.7617, 0.7468, 0.7558, 0.7352, 0.7405, 0.7532, 0.7426, 0.7542, 0.7474, 0.7579, 0.7574, 0.7574, 0.7632, 0.7331, 0.7553, 0.7532, 0.7489, 0.7595, 0.7558, 0.7452, 0.7659, 0.7394, 0.7818, 0.7569, 0.7564, 0.7648, 0.7749, 0.7712, 0.785, 0.7744, 0.777, 0.7781, 0.7701, 0.777, 0.7934, 0.7924, 0.7834, 0.7728, 0.7903, 0.795, 0.7993, 0.8035, 0.8189, 0.8014, 0.8014, 0.7934, 0.7765, 0.7929, 0.8019, 0.813, 0.795, 0.8136, 0.8114, 0.83, 0.8263, 0.8257, 0.8019, 0.8257, 0.8072, 0.8289, 0.8157],
    'k = 19': [0.6027, 0.5772, 0.644, 0.6533, 0.7109, 0.7245, 0.7016, 0.7027, 0.7168, 0.6984, 0.7092, 0.6984, 0.7353, 0.7391, 0.7663, 0.7375, 0.7755, 0.725, 0.7717, 0.7304, 0.7299, 0.7185, 0.675, 0.756, 0.7679, 0.7598, 0.7924, 0.7701, 0.7478, 0.7766, 0.7995, 0.7429, 0.7924, 0.7505, 0.7832, 0.7821, 0.7815, 0.7609, 0.7826, 0.7755, 0.7685, 0.7924, 0.7793, 0.781, 0.7804, 0.7891, 0.7902, 0.7679, 0.7755, 0.7891, 0.7973, 0.7962, 0.7929, 0.7707, 0.7745, 0.8098, 0.7984, 0.8109, 0.8163, 0.7832, 0.8043, 0.8185, 0.8196, 0.8152, 0.8087, 0.8087, 0.8076, 0.8054, 0.819, 0.8185, 0.7891, 0.8266, 0.8092, 0.8179, 0.8016, 0.8027, 0.8234, 0.819, 0.8109, 0.8136, 0.819, 0.7946, 0.8326, 0.8315, 0.8272, 0.8283, 0.8185, 0.8326, 0.8272, 0.8315, 0.8375, 0.8087, 0.8359, 0.831, 0.8375, 0.8364, 0.8451, 0.8364, 0.8299, 0.8147]
}

pparam = dict(xlabel='Training epoch count', ylabel='Validation accuracy')

with plt.style.context(['science']):
    plt.rcParams['grid.linewidth'] = 0.5  # Adjust grid line width
    fig, ax = plt.subplots()
    for acc in acc_vs_epoch.values(): ax.plot(acc)

    legend = ax.legend(acc_vs_epoch.keys())
    ax.add_artist(legend)
    ax.autoscale(tight=True)
    ax.set(**pparam)
    ax.set_ylim(0, 1)  # Set the limits of y-axis from 0 to 1
    fig.savefig('acc_vs_epoch.eps', format='eps')
    fig.savefig('acc_vs_epoch.png', format='png', dpi=600)
    plt.close()
